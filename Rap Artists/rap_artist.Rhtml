<html>

<head>
<title>Title</title>
</head>

<body>

<p>This is an R HTML document. When you click the <b>Knit HTML</b> button a web page will be generated that includes both content as well as the output of any embedded R code chunks within the document. You can embed an R code chunk like this:</p>

<!--begin.rcode

end.rcode-->

<p>You can also embed plots, for example:</p>

<!--begin.rcode fig.width=7, fig.height=6

library(tidyverse)
library(plotly)
library(gghighlight)
library(glue)
library(ggthemes)
library(extrafont)

loadfonts()

polls <- read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-04-14/polls.csv')
glimpse(polls)

rankings <- read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-04-14/rankings.csv')
glimpse(rankings)

rap_artist_rank <- inner_join(polls, rankings)

rar <- rap_artist_rank %>% count(artist, points, title, year) %>% arrange(points)
rar %>% view()

song_title2 <- rar %>% mutate(artist = as.character(artist),
                             title = as.character(title))



r <- rar %>% 
  group_by(year, artist, title) %>% 
  ggplot(aes(year, points)) + 
  geom_point(aes(colour=as.factor(n))) +
  gghighlight(max(n) > 8) +
  geom_text(aes(label=glue("{year}--{artist} :: {title}")), 
            hjust=0.2, vjust=-1, fontface="italic") +
  labs(colour="Ranked top most songs of the year") + 
  theme_wsj() + 
  theme(legend.position = "none") + 
  labs(title = "Best Rap Artist Year Wise", caption = "tidytuesday: Rap_Artist") + 
  theme(plot.title = element_text(family="Bradley Hand ITC", face = "italic", color = "#F2147D"),
        plot.caption = element_text(family="Bradley Hand ITC", face = "italic", color = "#F2147D"))

r




# 
# polls <- polls %>% group_by(year)
# polls
# 
# songs_year <- count(polls, year, name = "songs")
# songs_year
# 
# points_year <- count(rankings, year, wt = points, name = "points")
# points_year
# 
# 
# y_axis_labels <- tibble(x = rep(2021, 5),
#                       y = c(-50, 0, 100, 200, 300),
#                       label = glue("{c(50, 0, 100, 200, 300)} {c('songs', rep('points', 4))}"))
# 
# x_axis_labels <- tibble(x = c(1979, 2019),
#                         y = rep(-10, 2))
# 
# 
# plot_data <- reduce(list(songs_year, points_year), left_join)
# plot_data
# 
# plot <- ggplot(plot_data, aes(x = year)) +
#   geom_hline(yintercept = c(-50, 0, 100, 200, 300), size = 0.1, color = "grey60") +
#   geom_text(data = y_axis_labels, aes(x = x, y = y,label = label), family = "Oswald", size = 4, color = "grey60", vjust = 1.2, hjust = 0) +
#   geom_text(data = x_axis_labels, aes(x = x, y = y, label = x), family = "Oswald", size = 4, color = "grey60") +
#   geom_area(aes(y = -songs), fill = "#3f3047", size = 0.5) +
#   geom_area(aes(y = points), fill = "#26408b", size = 0.5)
# 
# plot


end.rcode-->

</body>
</html>
